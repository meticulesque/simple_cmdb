<h1>Configuration Item Details</h1>

<table class="table">
  <tr>
    <th>Name:</th>
    <td><%= @configuration_item.name %></td>
  </tr>
  <tr>
    <th>Type:</th>
    <td><%= @configuration_item.ci_type %></td>
  </tr>
  <tr>
    <th>Status:</th>
    <td><%= @configuration_item.status %></td>
  </tr>
  <tr>
    <th>Environment:</th>
    <td><%= @configuration_item.environment %></td>
  </tr>
</table>

<h2>Related Configuration Items</h2>
<% if @configuration_item.related_cis.any? %>
  <ul>
    <% @configuration_item.related_cis.each do |related_ci| %>
      <li><%= link_to related_ci.name, configuration_item_path(related_ci) %> (Type: <%= related_ci.ci_type %>)</li>
    <% end %>
  </ul>
<% else %>
  <p>No related configuration items.</p>
<% end %>

<div id="tree-container">
  <script src="https://d3js.org/d3.v7.min.js"></script>
  <script>
      document.addEventListener("turbo:load", function() {
          const ciId = "<%= @configuration_item.id %>"; // Get CI ID dynamically
          fetch(`/${ciId}/tree_data`)
              .then(response => response.json())
              .then(data => drawTree(data));
      });

      function drawTree(data) {
          const width = 600, height = 400;
          const svg = d3.select("#tree-container")
              .append("svg")
              .attr("width", width)
              .attr("height", height)
              .append("g")
              .attr("transform", "translate(50,50)");

          const root = d3.hierarchy(data);
          const treeLayout = d3.tree().size([width - 100, height - 100]);
          treeLayout(root);

          svg.selectAll("line")
              .data(root.links())
              .enter()
              .append("line")
              .attr("x1", d => d.source.x)
              .attr("y1", d => d.source.y)
              .attr("x2", d => d.target.x)
              .attr("y2", d => d.target.y)
              .attr("stroke", "black");

          svg.selectAll("circle")
              .data(root.descendants())
              .enter()
              .append("circle")
              .attr("cx", d => d.x)
              .attr("cy", d => d.y)
              .attr("r", 5)
              .attr("fill", "blue");

          svg.selectAll("text")
              .data(root.descendants())
              .enter()
              .append("text")
              .attr("x", d => d.x + 5)
              .attr("y", d => d.y - 5)
              .text(d => d.data.name)
              .attr("font-size", "12px");
      }
  </script>
</div>

<%= link_to 'Edit', edit_configuration_item_path(@configuration_item), class: 'btn btn-warning' %>
<%= link_to 'Delete', configuration_item_path(@configuration_item), data: { turbo_method: :delete, turbo_confirm: 'Are you sure?' }, class: 'btn btn-danger' %>
<%= link_to 'Back to List', configuration_items_path, class: 'btn btn-secondary' %>

<%= button_to "Logout", destroy_user_session_path, method: :delete, class: "btn btn-danger mt-3" %>
